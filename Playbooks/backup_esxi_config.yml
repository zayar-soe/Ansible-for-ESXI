---
- name: Patch standalone ESXi host via SSH (backup task)
  hosts: ESXI-01
  gather_facts: no
  become: false
  vars:
    backup_file: /tmp/configBundle-esxi.host.domain.tgz
  tasks:
    - name: Save the ESXi configuration locally by authenticating directly against the ESXi host
      community.vmware.vmware_cfg_backup:
        hostname: '{{ ansible_host }}'
        username: '{{ ansible_user }}'
        password: '{{ ansible_password }}'
        state: saved
        dest: '{{ backup_file }}'
        validate_certs: false
      delegate_to: localhost

- name: Confirm backup file was saved locally and move to artifacts
  hosts: localhost
  gather_facts: no
  become: false
  vars:
    backup_file: /tmp/configBundle-esxi.host.domain.tgz
    artifact_file: /runner/artifacts/{{ tower_job_id }}/configBundle-esxi.host.domain.tgz
  tasks:
    - name: Confirm backup file was saved
      stat:
        path: '{{ backup_file }}'
      register: backup_file_info

    - name: Show backup status
      debug:
        msg: "Backup saved: {{ backup_file_info.stat.exists }}"

    - name: Move backup file to artifacts directory inside EE container
      command: mv "{{ backup_file }}" "{{ artifact_file }}"

- name: Restore ESXi configuration from backup
  hosts: ESXI-01
  gather_facts: no
  become: false
  vars:
    backup_file: /tmp/configBundle-esxi.host.domain.tgz
  tasks:
    - name: Copy backup file from controller to ESXi host
      ansible.builtin.copy:
        src: "/runner/artifacts/{{ tower_job_id }}/configBundle-esxi.host.domain.tgz"
        dest: "{{ backup_file }}"
      delegate_to: localhost
      
    - name: Put host in maintenance mode
      ansible.builtin.shell: vim-cmd hostsvc/maintenance_mode_enter
      register: enter_mm

    - name: Confirm maintenance mode entered
      debug: var=enter_mm.stdout
      
    - name: Restore the ESXi configuration from backup file
      community.vmware.vmware_cfg_backup:
        hostname: '{{ ansible_host }}'
        username: '{{ ansible_user }}'
        password: '{{ ansible_password }}'
        state: loaded
        src: '{{ backup_file }}'
        validate_certs: false
      delegate_to: localhost
      
    - name: Wait 90 seconds before checking SSH
      pause:
        seconds: 90

    - name: Exit maintenance mode
      ansible.builtin.shell: vim-cmd hostsvc/maintenance_mode_exit
      register: exit_mm

    - name: Confirm maintenance mode exited
      debug: var=exit_mm.stdout
